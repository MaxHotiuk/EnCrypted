// <auto-generated />
using System;
using EnCryptedAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnCryptedAPI.Migrations
{
    [DbContext(typeof(EnCryptedDbContext))]
    [Migration("20240928110354_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1");

            modelBuilder.Entity("EnCryptedAPI.Models.Domain.EncryptionJob", b =>
                {
                    b.Property<Guid>("JobID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DataEncrypted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DecryptedData")
                        .HasColumnType("TEXT");

                    b.Property<string>("EncryptedData")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TaskID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserID")
                        .HasColumnType("TEXT");

                    b.HasKey("JobID");

                    b.HasIndex("TaskID");

                    b.HasIndex("UserID");

                    b.ToTable("EncryptionJobs");
                });

            modelBuilder.Entity("EnCryptedAPI.Models.Domain.GeneralStatistic", b =>
                {
                    b.Property<Guid>("StatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("StatID");

                    b.ToTable("GeneralStatistics");
                });

            modelBuilder.Entity("EnCryptedAPI.Models.Domain.Task", b =>
                {
                    b.Property<Guid>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserID")
                        .HasColumnType("TEXT");

                    b.HasKey("TaskID");

                    b.HasIndex("UserID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("EnCryptedAPI.Models.Domain.TaskHistory", b =>
                {
                    b.Property<Guid>("HistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TaskID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserID")
                        .HasColumnType("TEXT");

                    b.HasKey("HistoryID");

                    b.HasIndex("TaskID");

                    b.HasIndex("UserID");

                    b.ToTable("TaskHistory");
                });

            modelBuilder.Entity("EnCryptedAPI.Models.Domain.UsageData", b =>
                {
                    b.Property<Guid>("DataID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("DataID");

                    b.ToTable("UsageData");
                });

            modelBuilder.Entity("EnCryptedAPI.Models.Domain.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.HasIndex("Username", "Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EnCryptedAPI.Models.Domain.UserSetting", b =>
                {
                    b.Property<Guid>("SettingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("NotificationsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PreferredLanguage")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserID")
                        .HasColumnType("TEXT");

                    b.HasKey("SettingID");

                    b.HasIndex("UserID");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("EnCryptedAPI.Models.Domain.EncryptionJob", b =>
                {
                    b.HasOne("EnCryptedAPI.Models.Domain.Task", "Task")
                        .WithMany("EncryptionJobs")
                        .HasForeignKey("TaskID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnCryptedAPI.Models.Domain.User", "User")
                        .WithMany("EncryptionJobs")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EnCryptedAPI.Models.Domain.Task", b =>
                {
                    b.HasOne("EnCryptedAPI.Models.Domain.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EnCryptedAPI.Models.Domain.TaskHistory", b =>
                {
                    b.HasOne("EnCryptedAPI.Models.Domain.Task", "Task")
                        .WithMany("TaskHistories")
                        .HasForeignKey("TaskID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnCryptedAPI.Models.Domain.User", "User")
                        .WithMany("TaskHistories")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EnCryptedAPI.Models.Domain.UserSetting", b =>
                {
                    b.HasOne("EnCryptedAPI.Models.Domain.User", "User")
                        .WithMany("UserSettings")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EnCryptedAPI.Models.Domain.Task", b =>
                {
                    b.Navigation("EncryptionJobs");

                    b.Navigation("TaskHistories");
                });

            modelBuilder.Entity("EnCryptedAPI.Models.Domain.User", b =>
                {
                    b.Navigation("EncryptionJobs");

                    b.Navigation("TaskHistories");

                    b.Navigation("Tasks");

                    b.Navigation("UserSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
